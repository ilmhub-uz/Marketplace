@page "/SignIn"
@inject HttpClient Htpp
@inject ILocalStorageService Storage
@inject NavigationManager NavigationManager
@using Blazored.LocalStorage
@using Marketplace.Blazor.Models
<h3>SignIn</h3>
<form >
    <div class="d-flex justify-content-center" style="flex-wrap:wrap;">
    <div class="form-group row g-3 col-md-5" style="border-radius: 25px;
    margin-top: 1rem;
    padding: 2rem;
    box-shadow: 0 0rem 3rem rgba(8,7,16,0.6)!important;">
    <div>
           <input @bind="_userModel.UserName"  class="form-control" type="text" placeholder="Username"/>
       </div>
    <div>
        <input @bind="_userModel.Password"  class="form-control" type="text" placeholder="Password"/>
    </div>
    <button class="form-control" type="button" @onclick="( async  ()=> await Login() ) " > Sign In</button>
        </div>
    </div>
</form>
@code {

    private  LoginUserModel? _userModel = new LoginUserModel();
    private async Task Login()
    {
        var response = await Htpp.PostAsJsonAsync("/account/login", _userModel);
        var token = await response.Content.ReadAsStringAsync();
        await Storage.SetItemAsStringAsync("token", token);
        if (response.IsSuccessStatusCode)
        {
            
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            if (!string.IsNullOrEmpty(result?.Token))
            {
                await Storage.SetItemAsStringAsync("token", result.Token);
                NavigationManager.NavigateTo("/counter");
            }
        }
        
    }
    public class LoginResult
    {
        public string  Token { get; set; }
    }
}