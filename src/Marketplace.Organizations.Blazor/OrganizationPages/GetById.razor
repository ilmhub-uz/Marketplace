@page "/GetById/{Id}"
@inject CategoryServices CategoryServices;
@using Marketplace.Organizations.Blazor.Models
@using Blazored.LocalStorage
@using Marketplace.Organizations.Blazor.Services
<h3>GetById</h3>

@if (isLoading)
{
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Get_Products...</span>
    </div>   
}
else
{
    <div class="row col-lg-12 col-md-12 col-sm-12 gap-3 d-flex justify-content-center" style="height:50px">
        <div class="card" style="width: 18rem;">
            <img class="card-img-top" src="@Model.Logo" alt="Card image cap">
            <div class="card-body">
                <h3 class="card-title">@Model.Name</h3>
                <p class="card-text">@Model.Description</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Contacts:<strong>@Model.Contact</strong></li>
                @foreach (var address in Model.Addresses!)
                {
                    <li class="list-group-item">Location:@address.Address</li>
                }
                @foreach (var user in Model.Users!)
                {
                    <li class="list-group-item">OrganizationId:@user.OrganizationId</li>
                    <li class="list-group-item">OwnerId:@user.UserId</li>
                }
            </ul>
        </div>
    </div>
}
@code {
    [Parameter]
    public string? Id { get; set; }
    private OrganizationModel? Model = new ();
    public bool isLoading = false;
    protected override async  Task OnInitializedAsync()
    {
        isLoading = true;
        Model = await CategoryServices.GetById(Id);
        isLoading = false;
    }

}